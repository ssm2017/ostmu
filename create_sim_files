#! /bin/bash

#~ /home/username/.opensim
#~ └── sim1.sim
    #~ ├── config-include
    #~ │   ├── GridCommon.ini
    #~ │   └── GridHypergrid.ini
    #~ ├── log
    #~ │   └── sim1.log
    #~ │   └── OpenSim.log
    #~ ├── OpenSim.exe.config
    #~ ├── OpenSim.ini
    #~ └── regions
        #~ └── Regions.ini
#~ available ports from 1024 to 49151 = 48127 ports available
#~ 48000 - 10000 = 38000 ports available / 100 = 380 users
#~ user1 = 10 100
#~ sim0 = 10 100
#~ region0 = 10 101
#~ region0 = 10 109
#~ sim1 = 10 110
#~ region1 = 10 111
#~ region9 = 10 119
#~ sim2 = 10 120
#~ region1 = 10 121
#~ region9 = 10 129
#~ sim3 = 10 130
#~ region1 = 10 131
#~ region9 = 10 139
#~ sim9 = 10 190
#~ region1 = 10 191
#~ region9 = 10 199
#~ so : 9 regions per sim and 10 sims per user = 90 regions per user...
#~ user2 = 10 200
#~ user9 = 10 900
#~ user10 = 11 000
#~ user11 = 11 100
#~ user99 = 19 900
#~ user100 = 20 000

# include the config
OPENSIM_SCRIPT_FOLDER="/opt/opensim/scripts"
source "${OPENSIM_SCRIPT_FOLDER}/etc/config"

# define some vars
USER_NAME=$1
SIM_NAME=$2
USER_PORT="0"
SIM_PORT="0"

show_help() {
  echo "Usage : create_sim <user_name> <sim_name>"
  exit;
}

add_file() {
  cat "${OPENSIM_INI_MODELS_FOLDER}/$1" | \
  sed -e 's/<\[user_name\]>/'${USER_NAME}'/g' \
  -e 's/<\[sim_name\]>/'${SIM_NAME}'/g' \
  -e 's/<\[sim_port\]>/'${SIM_PORT}'/g' > $2
}

get_next_available_user_port() {
  # remove empty lines in file
  sed -i '/^$/d' "${OPENSIM_PORTS_FILE}"
  # count lines
  users_qty=$(wc -l < "${OPENSIM_PORTS_FILE}")
  next_user_nbr=$((${users_qty} + 1))
  if [ ${next_user_nbr} -lt 10 ];then
    USER_PORT="10${next_user_nbr}00"
  else
    if [ ${next_user_nbr} -gt 99 ];then
      USER_PORT=$((${next_user_nbr} + 100))"00"
    else
      USER_PORT="1${next_user_nbr}00"
    fi
  fi
  echo "${USER_NAME};${USER_PORT}" >> "${OPENSIM_PORTS_FILE}"
}

create_sim_files() {
  # count user sim folders
  sim_files_qty=$(find ${USER_OPENSIM_FOLDER} -type d -name "*.sim" | wc -l)
  if [ ${sim_files_qty} -gt 9 ];then
    echo -e "${ColRedF}Maximum 10 sims per user.${ColReset}"
    exit;
  fi
  # get the user port
  user_port_line=$(grep "^${USER_NAME}" "${OPENSIM_PORTS_FILE}")
  if [ "${user_port_line}" ];then
    # get the user port
    USER_PORT=$(echo "${user_port_line}" | cut -d ";" -f2)
  else
    get_next_available_user_port
  fi
  # define sim port
  if [ ${sim_files_qty} = 0 ];then
    SIM_PORT=${USER_PORT}
  else
    SIM_PORT=$((${USER_PORT} + $((${sim_files_qty} * 10))))
  fi
  # add root files
  mkdir -p "$1"
  add_file "OpenSim.exe.config" "$1/OpenSim.exe.config"
  add_file "OpenSim.ini" "$1/OpenSim.ini"
  # config-include
  mkdir -p "$1/config-include"
  add_file "GridCommon.ini" "$1/config-include/GridCommon.ini"
  add_file "GridHypergrid.ini" "$1/config-include/GridHypergrid.ini"
  # log
  mkdir -p "$1/log"
  # temp
  mkdir -p "$1/temp"
  # regions
  mkdir -p "$1/regions"
  add_file "Regions.ini" "$1/regions/Regions.ini"
  # change ownership
  chown -R "${USER_NAME}":"${USER_NAME}" "$1"
}

# begin of logic
if [ $# -lt 2 ];then
  show_help
  exit;
fi

# check if the user exists
if user_exists ${USER_NAME} > /dev/null; then
  echo -e "${ColGreenF}${SymbolOk}User ${USER_NAME} exists.${ColReset}"
else
  echo -e "${ColRedF}${SymbolNotOk}User ${USER_NAME} does not exist.${ColReset}"
  exit 1;
fi

# check if the user opensim folder exists and if not, create it.
USER_OPENSIM_FOLDER="/home/$USER_NAME/.opensim"
if [ ! -d "${USER_OPENSIM_FOLDER}" ];then
  echo -e "${ColRedF}Folder ${USER_OPENSIM_FOLDER} does not exist.${ColReset}"
  echo "Creating folder."
  mkdir -p "${USER_OPENSIM_FOLDER}"
  chown "${USER_NAME}":"${USER_NAME}" "${USER_OPENSIM_FOLDER}"
else
  echo -e "${ColGreenF}Folder ${USER_OPENSIM_FOLDER} exists.${ColReset}"
fi

# check if the simulator folder exists and if not, create it
SIM_FOLDER="${USER_OPENSIM_FOLDER}/${SIM_NAME}.sim"
if [ ! -d "${SIM_FOLDER}" ];then
  echo -e "${ColRedF}Folder ${SIM_FOLDER} does not exist.${ColReset}"
  echo "Creating folder"
  create_sim_files "${SIM_FOLDER}"
else
  echo -e "${ColGreenF}Folder ${SIM_FOLDER} exists.${ColReset}"
fi
