#! /bin/bash

# include the config
OSTMU_FOLDER="/opt/ostmu"
source "${OSTMU_FOLDER}/etc/config"

# define some vars
USER_NAME=$1
SIM_NAME=$2
USER_PORT="0"
SIM_PORT="0"
DB_PASSWORD=`date | md5sum | cut -c1-8`

show_help() {
  print_message "${_USAGE} : create_sim <user_name> <sim_name>"
  exit;
}

add_file() {
  cat "${OSTMU_INI_MODELS_FOLDER}/$1" | \
  sed -e 's/<\[user_name\]>/'${USER_NAME}'/g' \
  -e 's/<\[grid_ip\]>/'${OPENSIM_GRID_IP}'/g' \
  -e 's/<\[db_password\]>/'${DB_PASSWORD}'/g' \
  -e 's/<\[sim_name\]>/'${SIM_NAME}'/g' \
  -e 's/<\[sim_port\]>/'${SIM_PORT}'/g' > $2
}

get_next_available_user_port() {
  # remove empty lines in file
  sed -i '/^$/d' "${OSTMU_PORTS_FILE}"
  # count lines
  users_qty=$(wc -l < "${OSTMU_PORTS_FILE}")
  next_user_nbr=$((${users_qty} + 1))
  if [ ${next_user_nbr} -lt 10 ];then
    USER_PORT="10${next_user_nbr}00"
  else
    if [ ${next_user_nbr} -gt 99 ];then
      USER_PORT=$((${next_user_nbr} + 100))"00"
    else
      USER_PORT="1${next_user_nbr}00"
    fi
  fi
  echo "${USER_NAME};${USER_PORT}" >> "${OSTMU_PORTS_FILE}"
}

create_sim_files() {
  # count user sim folders
  sim_files_qty=$(find ${USER_CONFIG_FOLDER_PATH} -type d -name "*.sim" | wc -l)
  if [ ${sim_files_qty} -gt 9 ];then
    print_message "${_MAX_10_SIMS_PER_USER}" "error"
    exit;
  fi
  # get the user port
  user_port_line=$(grep "^${USER_NAME}" "${OSTMU_PORTS_FILE}")
  if [ "${user_port_line}" ];then
    # get the user port
    USER_PORT=$(echo "${user_port_line}" | cut -d ";" -f2)
  else
    get_next_available_user_port
  fi
  # define sim port
  if [ ${sim_files_qty} = 0 ];then
    SIM_PORT=${USER_PORT}
  else
    SIM_PORT=$((${USER_PORT} + $((${sim_files_qty} * 10))))
  fi
  # add root files
  mkdir -p "$1"
  add_file "OpenSim.exe.config" "$1/OpenSim.exe.config"
  add_file "OpenSim.ini" "$1/OpenSim.ini"
  # config-include
  mkdir -p "$1/config-include"
  add_file "GridCommon.ini" "$1/config-include/GridCommon.ini"
  add_file "GridHypergrid.ini" "$1/config-include/GridHypergrid.ini"
  # log
  mkdir -p "$1/log"
  # temp
  mkdir -p "$1/temp"
  # regions
  mkdir -p "$1/regions"
  add_file "Regions.ini" "$1/regions/Regions.ini"
  # change ownership
  chown -R "${USER_NAME}":"${USER_NAME}" "$1"
}

# begin of logic
if [ $# -lt 2 ];then
  show_help
  exit;
fi

# check if the user exists
if user_exists ${USER_NAME} > /dev/null; then
  print_message "${_THE_USER} ${USER_NAME} ${_EXISTS}." "ok"
else
  print_message "${_THE_USER} ${USER_NAME} ${_DOES_NOT_EXIST}." "notok"
  exit 1;
fi

# check for the config folder
if [ ! -d "/var/lib/ostmu" ]; then
  print_message "${_THE_OSTMU_CONFIG_FOLDER_DOES_NOT_EXIST}" "notok"
  print_message "${_CREATING_THE_FOLDER}."
  mkdir -p "/var/lib/ostmu"
  if [ ! $? -eq 0 ]; then
    print_message "${_THE_FOLDER} /var/lib ${_IS_NOT_WRITABLE}" "error"
    exit 1;
  fi
fi

# check for the ports file
if [ ! -f ${OSTMU_PORTS_FILE} ]; then
  print_message "${_THE_PORTS_FILE_DOES_NOT_EXIST}" "notok"
  print_message "${_CREATING_THE_FILE}."
  touch ${OSTMU_PORTS_FILE}
  if [ ! $? -eq 0 ]; then
    print_message "${_THE_PORTS_FILE_IS_NOT_WRITABLE}" "error"
    exit 1;
  fi
fi
if [ ! -w ${OSTMU_PORTS_FILE} ]; then
  print_message "${_THE_PORTS_FILE_IS_NOT_WRITABLE}" "error"
  exit 1;
fi

# check if the user config folder exists and if not, create it.
if [ -d "${USER_CONFIG_FOLDER_PATH}" ];then
  print_message "${_THE_FOLDER} ${USER_CONFIG_FOLDER_PATH} ${_EXISTS}." "ok"
else
  print_message "${_THE_FOLDER} ${USER_CONFIG_FOLDER_PATH} ${_DOES_NOT_EXIST}." "notok"
  print_message "${_CREATING_THE_FOLDER}."
  mkdir -p "${USER_CONFIG_FOLDER_PATH}"
  chown "${USER_NAME}":"${USER_NAME}" "${USER_CONFIG_FOLDER_PATH}"
fi

if [ ${USE_MYSQL} == 1 ]; then
  # check if the db password file exit and if not, create it
  if [ -f "${USER_CONFIG_FOLDER_PATH}/db_pass" ];then
    DB_PASSWORD=`cat ${USER_CONFIG_FOLDER_PATH}/db_pass`
  else
    echo ${DB_PASSWORD} > "${USER_CONFIG_FOLDER_PATH}/db_pass"
    chown "${USER_NAME}":"${USER_NAME}" "${USER_CONFIG_FOLDER_PATH}/db_pass"
  fi

  # load the mysql functions file
  source "${OSTMU_FOLDER}/includes/mysql"

  # check if the user exists in the database
  mysql_check_if_user_exists ${USER_NAME};
  if [ $? -eq 1 ]; then
    print_message "${_THE_USER} ${USER_NAME} ${_EXISTS} ${_IN_THE_DATABASE}." "ok"
  else
    print_message "${_THE_USER} ${USER_NAME} ${_DOES_NOT_EXIST} ${_IN_THE_DATABASE}." "notok"
    print_message "${_CREATING_THE_USER}"
    mysql_create_user ${USER_NAME} ${DB_PASSWORD}
  fi

  # create the database
  mysql_create_database ${USER_NAME} "sim_${USER_NAME}_${SIM_NAME}"
fi

# check if the simulator folder exists and if not, create it
SIM_FOLDER="${USER_CONFIG_FOLDER_PATH}/${SIM_NAME}.sim"
if [ -d "${SIM_FOLDER}" ];then
  print_message "${_THE_FOLDER} ${SIM_FOLDER} ${_EXISTS}." "ok"
else
  print_message "${_THE_FOLDER} ${SIM_FOLDER} ${_DOES_NOT_EXIST}." "notok"
  print_message "${_CREATING_THE_FOLDER}."
  create_sim_files "${SIM_FOLDER}"
fi
