#!/bin/bash

show_help() {
  cat <<EOF
usage: run_sim <start|stop|restart|console> <sim name> [user_name]
EOF
  exit 1
}

# check if params
if [ $# -lt 2 ];then
  show_help
  exit;
fi

# fill params
command=$1
sim_name=$2
user_name=$3

# check the command
case $command in
  start)
    ;;
  stop)
    ;;
  restart)
    ;;
  console)
    ;;
  *)
    show_help
    exit 1;
    ;;
esac




# ======================
#      user test
# ======================

if [ $# -eq 3 ];then
  # check if same user
  if [ ! "$(id -nu)" = "${3}" ]; then
    # check if user exists
    if [ ! $(id -u "${3}" 2>/dev/null) ]; then
      # re run using the other user rights
      #su - opensim -c "$0 $*"
      sudo -i -u ${3} -- /usr/local/bin/run_sim $*
      exit
    fi
  fi
else
  user_name="$(id -nu)"
fi


# ======================
#         config
# ======================
# check if the config file exists
if [ ! -f "/etc/ostmu/ostmu.conf" ]; then
  echo $"/etc/ostmu/ostmu.conf file not found."
  exit 1;
fi

# include the config
source "/etc/ostmu/ostmu.conf"

# lang
TEXTDOMAIN=ostmu
TEXTDOMAINDIR="${OSTMU_FOLDER}/locale"

# user
user_config_folder_path="/home/${user_name}/${USER_CONFIG_FOLDER_NAME}"

# include the colors declarations
source "${OSTMU_FOLDER}/includes/theme"

# include functions files
source "${OSTMU_FOLDER}/includes/sys"
source "${OSTMU_FOLDER}/includes/users"
source "${OSTMU_FOLDER}/includes/tmux"
source "${OSTMU_FOLDER}/includes/sims"

# ======================
#      main program
# ======================
service_is_running() {
  check_sim ${user_name} ${sim_name}
  return $?;
}

do_start() {
  service_is_running
  if [ $? -eq 0 ]; then
    echo "The simulator ${sim_name} seems to be already running."
    exit 1
  else
    echo -n "Starting... "
    tmux_session_exists ${user_name} ${sim_name}
    if [ ! $? -eq 0 ]; then
      tmux_create_session "${user_name}" "${sim_name}"
      run_simulator "${user_name}" "${sim_name}"
    else
      # check if simulator is responding
      check_sim ${user_name} ${sim_name}
      if [ ! $? -eq 0 ]; then
        run_simulator "${user_name}" "${sim_name}"
      fi
    fi
    exit 0;
  fi
}

do_stop() {
  service_is_running
  if [ $? -eq 0 ]; then
    stop_simulator ${user_name} ${sim_name}
  else
    echo "Error stopping the simulator ${sim_name}."
    exit 1
  fi
}

case "$command" in
  start)
    do_start ${sim_name}
    ;;
  stop)
    do_stop ${sim_name}
    ;;
  restart)
    do_stop ${sim_name}
    sleep 10
    do_start ${sim_name}
    ;;
  console)
    tmux_attach_session ${user_name} ${sim_name}
    ;;
  *)
    show_help
    ;;
esac

exit 0
