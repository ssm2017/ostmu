#! /bin/bash

# ======================
#         config
# ======================
# check if the config file exists
if [ ! -f "/etc/ostmu/ostmu.conf" ]; then
  echo $"/etc/ostmu/ostmu.conf file not found."
  exit 1;
fi

# include the config
source "/etc/ostmu/ostmu.conf"

# lang
TEXTDOMAIN=ostmu
TEXTDOMAINDIR="${OSTMU_FOLDER}/locale"

# include the colors declarations
source "${OSTMU_FOLDER}/includes/theme"

# include functions files
source "${OSTMU_FOLDER}/includes/sys"
source "${OSTMU_FOLDER}/includes/users"
source "${OSTMU_FOLDER}/includes/tmux"
source "${OSTMU_FOLDER}/includes/sims"

# define some vars
declare -a sim_names=()
act_user=${USER}

# ======================
#         route
# ======================

if [ $# -gt 1 ]; then
  # check if actual user is in the tmux group
  groups ${USER} | grep ${TMUX_SOCKET_FOLDER_GROUP_NAME} > /dev/null 2>&1
  if [ $? -eq 1 ]; then
    if [[ $EUID -ne 0 ]]; then
      echo -e ${SymbolNotOk} $"You are not in the tmux group and you are not root."
    fi
  fi
  act_user=${1}
  shift
fi
#exit;
user_config_folder_path="/home/${act_user}/${USER_CONFIG_FOLDER_NAME}"

# ======================
#         checks
# ======================

# check if the config folder exists
if [ ! -d "$user_config_folder_path" ]; then
  echo -e ${SymbolNotOk} $"The folder ${user_config_folder_path} does not exist."
  exit 1;
fi

# get the .sim folders in config
cd "${user_config_folder_path}"
for i in *.sim;do
  if [ -d $i ]; then
    fullname=$(basename "$i")
    #~ extension="${fullname##*.}"
    shortname="${fullname%.*}"
    echo -e ${SymbolOk} $"The folder ${fullname} exists."
    sim_names=("${sim_names[@]}" "${shortname}")
  fi
done

# count the .sim folders
sim_folders_qty=${#sim_names[@]}
if [ ${sim_folders_qty} -eq 0 ]; then
  echo -e ${SymbolNotOk} $"There are no .sim folders inside ${user_config_folder_path}."
  exit 1;
fi

# check if the tmux folder exists
if [ ! -d "${TMUX_SOCKET_FOLDER}/${act_user}" ]; then
  mkdir -p "${TMUX_SOCKET_FOLDER}/${act_user}"
  if [ ! $? ]; then
    echo -e ${SymbolNotOk} $"Could not create the tmux socket folder."
    exit;
  fi
fi

# check if display/start session
if [ -d "${user_config_folder_path}/${1}.sim" ]; then
  if ! tmux_session_exists ${act_user} ${1}; then
    tmux_create_session "${act_user}" "${1}"
    run_simulator "${act_user}" "${1}"
  fi
  # check if simulator is responding
  if ! check_sim ${act_user} ${1}; then
    run_simulator "${act_user}" "${1}"
  fi
  tmux -S "${TMUX_SOCKET_FOLDER}/${act_user}/socket" attach -t "${1}"
  exit 0;
fi

# check if autostart
if [ "$1" == "autostart" ]; then
  for simname in "${sim_names[@]}"; do
    if [ -f "${user_config_folder_path}/${simname}.sim/autostart" ]; then
      if ! tmux_session_exists ${act_user} ${simname}; then
        tmux_create_session "${act_user}" "${simname}"
        run_simulator "${act_user}" "${simname}"
      fi
    fi
  done
  exit 0;
fi

# ======================
#          ask
# ======================
declare -a has_session=()
declare -a has_no_session=()

# get the list of running tmux sessions
for simname in "${sim_names[@]}"; do
  if tmux_session_exists ${act_user} ${simname}; then
    echo -e ${SymbolOk} $"The tmux session ${simname} exists."
    has_session=("${has_session[@]}" "${simname}");
  else
    echo -e ${SymbolNotOk} $"The tmux session ${simname} does not exist."
    has_no_session=("${has_no_session[@]}" "${simname}");
  fi
done

echo $"${#has_session[@]} running simulators."
echo $"${#has_no_session[@]} non running simulators."

if [ ! "${#has_no_session[@]}" -eq 0 ]; then
  echo -e ${ColYellowF} $"Do you want to start a new simulator ?" ${ColReset}
  echo $"Enter y or n :"
  read start_sim
  if [ "$start_sim" == "y" ]; then
    echo $"available simulators :"
    i=0
    for simname in "${has_no_session[@]}"; do
      i=$((i+1))
      echo "$i/ ${simname}"
    done
    echo -e ${ColYellowF} $"What simulator do you want to start ?" ${ColReset}
    echo $"Enter a number :"
    read sim_number
    if ! [[ "$sim_number" =~ ^[0-9]+$ ]] ; then
      echo -e ${SymbolNotOk} $"Wrong answer. Good bye."
      exit 1;
    fi
    if [ "$sim_number" -eq 0 ]; then
      echo -e ${SymbolNotOk} $"Wrong answer. Good bye."
      exit 0;
    fi
    if [[ "${has_no_session[($sim_number - 1)]}" ]]; then
      simname="${has_no_session[($sim_number - 1)]}"
      echo $"Creating the session : ${simname}"
      tmux_create_session "${act_user}" "${simname}"
      echo $"Starting the simulator"
      run_simulator "${act_user}" "${simname}"
    else
      echo -e ${SymbolNotOk} $"Wrong answer. Good bye."
      exit 1;
    fi
  fi
fi

# get the available sessions
declare -a tmux_sessions=()
cd "${TMUX_SOCKET_FOLDER}/${act_user}"

if [[ `tmux -S "${TMUX_SOCKET_FOLDER}/${act_user}/socket" list-session  2>&1 | cut -d":" -f1` = "$i" ]]; then
  tmux_sessions=("${tmux_sessions[@]}" "${i}")
fi

if [ "${#tmux_sessions[@]}" -eq 0 ]; then
  exit;
fi

echo -e ${ColYellowF} $"Do you want to see a session ?" ${ColReset}
echo $"Enter y or n :"
read see_a_session
if [ "$see_a_session" == "n" ]; then
  exit 0;
fi

echo $"available sessions :"
i=0
for session_name in "${tmux_sessions[@]}"; do
  i=$((i+1))
  echo "$i/ ${session_name}"
done
echo -e ${ColYellowF} $"What session do you want to see ?" ${ColReset}
echo $"Enter a number :"
read session_number
if ! [[ "$session_number" =~ ^[0-9]+$ ]] ; then
  echo -e ${SymbolNotOk} $"Wrong answer. Good bye."
  exit 1;
fi
if [ "$session_number" -eq 0 ]; then
  echo -e ${SymbolNotOk} $"Wrong answer. Good bye."
  exit 0;
fi
if [[ "${tmux_sessions[($session_number - 1)]}" ]]; then
  tmux -S "${TMUX_SOCKET_FOLDER}/${act_user}/socket" attach -t "${tmux_sessions[($session_number - 1)]}"
else
  echo -e ${SymbolNotOk} $"Wrong answer. Good bye."
  exit 1;
fi
