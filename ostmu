#! /bin/bash

# include the config
OSTMU_FOLDER="/opt/ostmu"
source "${OSTMU_FOLDER}/etc/config"

# define some vars
declare -a SIM_NAMES=()
declare -a WINDOW=()
declare -a NO_WINDOW=()

# check if the config folder exists
if [ ! -d "$USER_CONFIG_FOLDER_PATH" ]; then
  print_message "${_THE_FOLDER} ${USER_CONFIG_FOLDER_PATH} ${_DOES_NOT_EXIST}" "error"
  exit 1;
fi

# get the .sim folders in config
cd "${USER_CONFIG_FOLDER_PATH}"
for i in *.sim;do
  if [ -d $i ]; then
    fullname=$(basename "$i")
    #~ extension="${fullname##*.}"
    shortname="${fullname%.*}"
    print_message "${_THE_FILE} ${fullname} ${_EXISTS}."
    SIM_NAMES=("${SIM_NAMES[@]}" "${shortname}")
  fi
done

# check if there are ini files
sim_folders_qty=${#SIM_NAMES[@]}
if [ ${sim_folders_qty} -eq 0 ]; then
  print_message "${_THERE_ARE_NO_SIM_FOLDERS_INSIDE} ${USER_CONFIG_FOLDER_PATH}." "error"
  exit 1;
fi

print_message "${_THERE_ARE} ${sim_folders_qty} ${_SIM_FOLDERS_INSIDE_YOUR_OPENSIM_FOLDER}."

# check if there is a session for the user
session_name=os-${USER}
if tmux_session_exists ${session_name}; then
  print_message "${_YOUR_USER_SESSION} : "${session_name}" ${_IS_RUNNING}." "ok"
else
  print_message "${_YOUR_USER_SESSION} ${_IS_NOT_RUNNING}." "notok"
  print_message "${_DO_YOU_WANT_TO_CREATE_YOUR_USER_SESSION} ?" "question"
  read -p "${_ENTER_Y_OR_N} :"
  if [ "$REPLY" == "y" ]; then
    print_message "${_CREATING_YOUR_USER_SESSION}."
    tmux -S "${TMUX_SOCKET_FOLDER}/${session_name}" new-session -s "${session_name}" -d
  else
    exit 0;
  fi
fi

for simname in "${SIM_NAMES[@]}"; do
  if tmux_window_exists ${session_name} ${simname}; then
    print_message "${_THE_TMUX_WINDOW} ${simname} ${_EXISTS}." "ok"
    WINDOW=("${WINDOW[@]}" "${simname}");
  else
    print_message "${_THE_TMUX_WINDOW} ${simname} ${_DOES_NOT_EXIST}." "notok"
    NO_WINDOW=("${NO_WINDOW[@]}" "${simname}");
  fi
done

print_message "${#WINDOW[@]} ${_RUNNING_SIMULATORS}."
print_message "${#NO_WINDOW[@]} ${_NON_RUNNING_SIMULATORS}."

if [ ! "${#NO_WINDOW[@]}" -eq 0 ]; then
  print_message "${_DO_YOU_WANT_TO_START_A_NEW_SIMULATOR} ?" "question"
  print_message "${_ENTER_Y_OR_N} :"
  read start_sim
  if [ "$start_sim" == "y" ]; then
    echo "${_AVAILABLE_SIMULATORS} :"
    i=0
    for simname in "${NO_WINDOW[@]}"; do
      i=$((i+1))
      echo "$i/ ${simname}"
    done
    print_message "${_WHAT_SIMULATOR_DO_YOU_WANT_TO_START} ?" "question"
    print_message "${_ENTER_A_NUMBER} :"
    read answer
    if ! [[ "$answer" =~ ^[0-9]+$ ]] ; then
      print_message "${_WRONG_ANWSER}" "error"
      exit 1;
    fi
    if [ "$answer" -eq 0 ]; then
      exit 0;
    fi
    if [[ "${NO_WINDOW[($answer - 1)]}" ]]; then
      simname="${NO_WINDOW[($answer - 1)]}"
      print_message "${_CREATING_THE_WINDOW} : ${simname}"
      tmux -S "${TMUX_SOCKET_FOLDER}/${session_name}" new-window -t "${session_name}" -n "${simname}"
      print_message "${_STARTING_THE_SIMULATOR}"
      run_simulator "${USER}" "${simname}"
    else
      print_message "${_WRONG_ANWSER} : $answer"
      exit 1;
    fi
  fi
fi

print_message "${_DO_YOU_WANT_TO_SEE_THE_SESSION} ?" "question"
print_message "${_ENTER_Y_OR_N} :"
read attach_session

if [ "$attach_session" == "y" ]; then
  tmux -S "${TMUX_SOCKET_FOLDER}/${session_name}" attach -t "${session_name}"
fi
